<template>
  <div class="market">
    <div class="market-left">
      <div
        class="menu-item"
        v-for="i in 2"
        :key="i"
      >
        <div class="menu-top">
          <view></view>
          <view>{{i === 0 ? '实物商品': '服务商品'}}</view>
        </div>
        <div class="menu-content">
          <div
            v-for="item in classifyList[i]"
            :class="{'sub-menu-item':true, 'active':activeId === item.id}"
            :key="item.id"
            @tap="handleGetGoodList(item.id)"
          >{{item.typeName}} </div>
        </div>
      </div>
    </div>
    <div class="market-right">
      <div
        class="good-box"
        v-if="goodList.length > 0"
      >
        <div
          class="good-item"
          v-for="item in goodList"
          :key="item.id"
          @tap="viewGoodDetail(item.id)"
        >
          <div class="item-left">
            <image :src="item.coverLink||'../../assets/images/mouse.png'" />
            <image
              src="../../assets/svg/activity.svg"
              v-if="item.isActivity === 1"
            />
          </div>
          <div class="item-right">
            <div class="desc">
              {{item.goodsName}}
            </div>
            <div class="info">
              <view>￥{{item.goodsDetails[0].price}}</view>
              <view>已卖{{(item.salesCount || 0) >9999 ?'9999+':(item.salesCount || 0)}}件</view>
            </div>
          </div>
        </div>
      </div>
      <div
        v-else
        class="empty"
      >
        <no-data></no-data>
      </div>
    </div>
    <mine></mine>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import { baseUrl } from '../../assets/js/base.js';
wepy.page({
  config: {
    navigationBarTitleText: 'test'
  },
  props: {},
  data: {
    activeClassify: '',
    goodList: [],
    classifyList: [],
    activeId: ''
    // serviceList:[],
    // notServiceList:[],
  },

  methods: {
    viewGoodDetail: function(id) {
      this.getGoodDetail(id);
    },
    getGoodDetail: function(id) {
      const params = { id };
      wx.request({
        url: baseUrl + '/v1/goodsInfo/findGoodsDetailByIdForFront',
        data: { ...params },
        success: res => {
          console.log('goodInfo-res', res);
          const { data, success } = res.data;
          if (success) {
            wx.setStorageSync('goodInfo', data);
            wx.navigateTo({
              url: '../goodDetail/index'
            });
          }
        },
        fail: err => {
          console.log('goodInfo-err', err);
        }
      });
    },
    getClassify: function() {
      wx.request({
        url: baseUrl + '/v1/goodsType/findGoodsTypePage',
        success: res => {
          console.log('classify-res', res);
          const {
            data: { success, data }
          } = res;
          if (success) {
            // this.classifyList = data;
            const serviceList = data.filter(demo => demo.isService === 1);
            const notServiceList = data.filter(demo => demo.isService !== 1);
            this.activeId = serviceList[0].id;
            this.classifyList = [];
            this.classifyList.push(notServiceList);
            this.classifyList.push(serviceList);
            this.getGoodList();
          }
        },
        fail: err => {
          console.log('classify-err', err);
        }
      });
    },
    getGoodList: function() {
      const params = {
        type: this.activeId
      };
      wx.request({
        url: baseUrl + '/v1/goodsInfo/findGoodsListByTypeForFront',
        data: { ...params },
        success: res => {
          console.log('goodList-res', res);
          const {
            data: { success, data }
          } = res;
          if (success) {
            this.goodList = data;
          }
        },
        fail: err => {
          console.log('goodList-err', err);
        }
      });
    },
    handleGetGoodList: function(id) {
      this.activeId = id;
      this.getGoodList();
    }
  },

  created() {
    this.getClassify();
  }
});
</script>

<style lang="less">
.market {
  display: flex;
  height: calc(100vh - 120rpx);
  // padding-bottom: 160rpx;
  .market-left {
    width: 200rpx;
    max-height: 100vh;
    .menu-item {
      border-top: 1rpx solid #d7d7d7;
      .menu-top {
        display: flex;
        align-items: center;
        padding: 30rpx 53rpx 30rpx 15rpx;
        view:nth-of-type(1) {
          width: 10rpx;
          height: 10rpx;
          border-radius: 50%;
          background: #f88142;
          margin-right: 10rpx;
        }
        view:nth-of-type(2) {
          font-size: 28rpx;
          font-weight: 500;
          color: #333333;
        }
      }
      .menu-content {
        .sub-menu-item {
          padding: 30rpx 0rpx 30rpx 15rpx;
          font-size: 28rpx;
          font-weight: 400;
          color: #666666;
          border-left: 6rpx solid transparent;
        }
        .active {
          border-left: 6rpx solid #1293ff;
          background: #f7f7f7;
          color: #1293ff;
        }
      }
    }
    .menu-item:nth-of-type(1) {
      border-top: 0;
    }
  }
  .market-right {
    max-height: 100vh;
    overflow-y: auto;
    flex: 1 1;
    border-top: 1rpx solid #d7d7d7;
    border-left: 1rpx solid #d7d7d7;
    .good-box {
      width: 100%;
      padding-left: 20rpx;
      .good-item {
        display: flex;
        justify-content: space-between;
        padding: 20rpx 0;
        border-bottom: 1rpx solid #ebebeb;
        .item-left {
          width: 160rpx;
          height: 135rpx;
          border-radius: 8rpx;
          position: relative;
          image:nth-of-type(1) {
            width: 100%;
            height: 100%;
            border-radius: 8rpx;
          }
          image:nth-of-type(2) {
            position: absolute;
            width: 45rpx;
            height: 42rpx;
            left: 0;
            top: 0;
          }
        }
        .item-right {
          flex: 1 1;
          display: flex;
          flex-direction: column;
          justify-content: space-between;
          padding: 0 20rpx;
          .desc {
            font-size: 24rpx;
            font-weight: 400;
            color: #333333;
          }
          .info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            view:nth-of-type(1) {
              font-size: 28rpx;
              font-weight: 500;
              color: #f88142;
            }
            view:nth-of-type(2) {
              font-size: 24rpx;
              font-weight: 400;
              color: #666666;
            }
          }
        }
      }
    }
  }
  .empty {
    max-height: 100vh;
    padding-top: 40rpx;
  }
}
</style>

<config>
{
    navigationBarTitleText: '簿记商城',
    usingComponents: {
      'no-data':'~@/components/noData',
      'mine':'~@/components/mine',
    }
}
</config>
